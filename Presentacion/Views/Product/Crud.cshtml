@model Entity.Product_Entity

@{
    //ViewBag.Title = "Crud";
    List<Entity.Categorias_Entity> Cate = ViewBag.Categorias;
}

<script src="~/Scripts/ckeditor.js"></script>
<script src="~/Scripts/jquery.js"></script>

<script type="text/javascript">
    function fileCheck(obj) {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
            $('#ImageData').attr({ value: '' });
        }
    }
</script>

<div class="infoPro">
    <div class="container">

        @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 style="text-align:center">Productos</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.HiddenFor(model => model.Prod_Int_Id, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.HiddenFor(model => model.Prod_Int_Id, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Prod_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Prod_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Prod_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Prod_System_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Prod_System_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Prod_System_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Prod_Sale_P, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Prod_Sale_P, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Prod_Sale_P, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Prod_P_C, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Prod_P_C, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Prod_P_C, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Prod_Cant, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Prod_Cant, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Prod_Cant, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cat_Int_Id, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        <select name="Cat_Int_Id" class="form-control">
                            @foreach (var CatIntId in Cate)
                                {
                                    <option @(CatIntId.CatIntIdValue == Model.Cat_Int_Id ? "selected" : "") value="@CatIntId.CatIntIdValue">
                                        @CatIntId.CatNombreValue
                                    </option>
                                }
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Prod_Status, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Prod_Status)
                            @Html.ValidationMessageFor(model => model.Prod_Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Prod_Img, new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                        @*@Html.ValidationMessageFor(model => model.Prod_Img)*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-default" />
                        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-info" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
