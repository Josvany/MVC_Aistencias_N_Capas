@model IList<Entity.Categorias_Entity>


@{

}
<div class="info2">
    <div class="container">
        @using (Html.BeginForm("Create", "Categorias", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            for (var item = 0; item < Model.Count; item++)
            {
                <div class="form-horizontal">
                    <h4 style="text-align:center">Categorias</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model[item].CatCodigoValue, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.HiddenFor(model => model[item].CatIntIdValue)
                            @Html.ValidationMessageFor(model => model[item].CatIntIdValue, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model[item].CatNombreValue, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model[item].CatNombreValue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model[item].CatNombreValue, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model[item].CatCodigoValue, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model[item].CatCodigoValue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model[item].CatCodigoValue, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model[item].CatStatusValue, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            <div class="checkbox">
                                @Html.EditorFor(model => model[item].CatStatusValue)
                                @Html.ValidationMessageFor(model => model[item].CatStatusValue, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-2">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-info" })
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
